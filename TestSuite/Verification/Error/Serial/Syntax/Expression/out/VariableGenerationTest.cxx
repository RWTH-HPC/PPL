/*********************************************************************/
/*        This is a generated C++ source file.                       */
/*        Generated by PatternDSL.                                   */
/*********************************************************************/

#include <vector>
#include <cstdint>
#include <string>
#include <limits>
#include <iostream>
#include "includes/Patternlib.hxx"
#include "includes/PThreadsLib.hxx"
#include "includes/VariableGenerationTest.hxx"
#include "includes/cuda_lib_VariableGenerationTest.hxx"
#include "mpi.h"
#include "includes/cuda_pool_lib.hxx"
#include "math.h"







/*********************************************************************/
/*        Global Variables                                           */
/*        Generated by PatternDSL .                                  */
/*********************************************************************/

int32_t GI32;
int64_t GI64;
int32_t GI;
int64_t GL;
int16_t GI16;
uint64_t GUI64;
uint32_t GUI32;
std::string GS;
bool GT;
uint16_t GUI16;
int8_t GI8;
char GC;
uint8_t GUI8;
double GD;
float GF;


/*********************************************************************/
/*        Function Declarations                                      */
/*        Generated by PatternDSL.                                   */
/*********************************************************************/



int main(int argc, char** argv) {

	GT = true;
	GI = 11;
	GD = 1.2;
	GF = 1.2;
	GC = 'C';
	GS = "Hello World!";
	GI8 = 1;
	GI16 = 1;
	GI32 = 1;
	GI64 = 1;
	GUI8 = 1;
	GUI16 = 1;
	GUI32 = 1;
	GUI64 = 1;
	GL = 1;
	char C_Rk0V4GpRZP;
	double D_UzCSAbX3hb;
	float F_tfWnxczITG;
	int64_t I64_vWJSSb3oGH;
	int32_t I_Pcn2S0mhbJ;
	int64_t L_GiHXHznUfp;
	int8_t I8_mQK9Vk2ZJj;
	std::string S_YWOExpSVId;
	bool T_rQXgVLhXOA;
	uint32_t UI32_ARir7eUr3n;
	uint16_t UI16_IMRSKxlA6c;
	uint8_t UI8_YQAyUOxVMO;
	int32_t I32_4uDVGjHdxH;
	int16_t I16_gmmO8suieu;
	uint64_t UI64_ozt9f6BOoD;
	int NUM_CORES;
	int NUM_GPUS;

	int rank, nprocs;
	MPI_Status Stat;
	MPI_Init(&argc, &argv);
	MPI_Comm_size(MPI_COMM_WORLD, &nprocs);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	if (rank == 0 ) {
		NUM_CORES = 48;
		NUM_GPUS = 2;
	} else 	if (rank == 1 ) {
		NUM_CORES = 48;
		NUM_GPUS = 2;
	}
	std::vector<Thread> pool(NUM_CORES);
	setPool(&pool);
	std::vector<Thread> gpu_pool(NUM_GPUS);
	setGPUPool(&gpu_pool);
	startExecution();
	startGPUExecution();
	if (rank == 0) {
		T_rQXgVLhXOA = true;
		I_Pcn2S0mhbJ = 11;
		D_UzCSAbX3hb = 1.2;
		F_tfWnxczITG = 1.2;
		C_Rk0V4GpRZP = 'C';
		S_YWOExpSVId = "Hello World!";
		I8_mQK9Vk2ZJj = 1;
		I16_gmmO8suieu = 1;
		I32_4uDVGjHdxH = 1;
		I64_vWJSSb3oGH = 1;
		UI8_YQAyUOxVMO = 1;
		UI16_IMRSKxlA6c = 1;
		UI32_ARir7eUr3n = 1;
		UI64_ozt9f6BOoD = 1;
		L_GiHXHznUfp = 1;
	}
	finishExecution();
	finishGPUExecution();
	MPI_Finalize();
	return 0;


}

