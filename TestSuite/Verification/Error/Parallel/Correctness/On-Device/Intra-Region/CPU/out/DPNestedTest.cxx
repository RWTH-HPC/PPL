/*********************************************************************/
/*        This is a generated C++ source file.                       */
/*        Generated by PatternDSL.                                   */
/*********************************************************************/

#include <vector>
#include <cstdint>
#include <string>
#include <limits>
#include <iostream>
#include "includes/Patternlib.hxx"
#include "includes/PThreadsLib.hxx"
#include "includes/DPNestedTest.hxx"
#include "includes/cuda_lib_DPNestedTest.hxx"
#include "mpi.h"
#include "includes/cuda_pool_lib.hxx"
#include "math.h"







/*********************************************************************/
/*        Global Variables                                           */
/*        Generated by PatternDSL .                                  */
/*********************************************************************/



/*********************************************************************/
/*        Function Declarations                                      */
/*        Generated by PatternDSL.                                   */
/*********************************************************************/



int main(int argc, char** argv) {

	int32_t* result_EKMNHplZ1f;
	int32_t* result_seq_tCPdEy9736;
	int32_t* initial_7G79DSA0Y7;
	int NUM_CORES;
	int NUM_GPUS;

	int rank, nprocs;
	MPI_Status Stat;
	MPI_Init(&argc, &argv);
	MPI_Comm_size(MPI_COMM_WORLD, &nprocs);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	if (rank == 0 ) {
		NUM_CORES = 48;
		NUM_GPUS = 2;
	} else 	if (rank == 1 ) {
		NUM_CORES = 48;
		NUM_GPUS = 2;
	}
	std::vector<Thread> pool(NUM_CORES);
	setPool(&pool);
	std::vector<Thread> gpu_pool(NUM_GPUS);
	setGPUPool(&gpu_pool);
	startExecution();
	startGPUExecution();
	initial_7G79DSA0Y7 = Init_List(1, initial_7G79DSA0Y7, 200LL * 200LL * 1LL);
	result_EKMNHplZ1f = Init_List(result_EKMNHplZ1f, 200LL * 200LL * 1LL);
	result_seq_tCPdEy9736 = Init_List(result_seq_tCPdEy9736, 200LL * 200LL * 1LL);
	if (rank == 0) {
		auto f_0_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 0; INDEX_b51cKtCiGU < 0 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_00yLXXU3Gp = 0; INDEX0_00yLXXU3Gp < 0 + 10; ++INDEX0_00yLXXU3Gp) {
					for (size_t INDEX1_00yLXXU3Gp = 0; INDEX1_00yLXXU3Gp < 0 + 200; ++INDEX1_00yLXXU3Gp) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_00yLXXU3Gp)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_00yLXXU3Gp)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(0).addWork(f_0_b51cKtCiGU);
		auto f_1_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 8; INDEX_b51cKtCiGU < 8 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_BBxmrd8QVv = 0; INDEX0_BBxmrd8QVv < 0 + 10; ++INDEX0_BBxmrd8QVv) {
					for (size_t INDEX1_BBxmrd8QVv = 0; INDEX1_BBxmrd8QVv < 0 + 200; ++INDEX1_BBxmrd8QVv) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_BBxmrd8QVv)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_BBxmrd8QVv)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(1).addWork(f_1_b51cKtCiGU);
		auto f_2_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 16; INDEX_b51cKtCiGU < 16 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_VVD9z8UVM5 = 0; INDEX0_VVD9z8UVM5 < 0 + 10; ++INDEX0_VVD9z8UVM5) {
					for (size_t INDEX1_VVD9z8UVM5 = 0; INDEX1_VVD9z8UVM5 < 0 + 200; ++INDEX1_VVD9z8UVM5) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_VVD9z8UVM5)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_VVD9z8UVM5)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(2).addWork(f_2_b51cKtCiGU);
		auto f_3_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 24; INDEX_b51cKtCiGU < 24 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_euquxUma24 = 0; INDEX0_euquxUma24 < 0 + 10; ++INDEX0_euquxUma24) {
					for (size_t INDEX1_euquxUma24 = 0; INDEX1_euquxUma24 < 0 + 200; ++INDEX1_euquxUma24) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_euquxUma24)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_euquxUma24)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(3).addWork(f_3_b51cKtCiGU);
		auto f_4_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 32; INDEX_b51cKtCiGU < 32 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_ik50eMdIBA = 0; INDEX0_ik50eMdIBA < 0 + 10; ++INDEX0_ik50eMdIBA) {
					for (size_t INDEX1_ik50eMdIBA = 0; INDEX1_ik50eMdIBA < 0 + 200; ++INDEX1_ik50eMdIBA) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_ik50eMdIBA)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_ik50eMdIBA)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(4).addWork(f_4_b51cKtCiGU);
		auto f_5_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 40; INDEX_b51cKtCiGU < 40 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_9el2Ckg2ms = 0; INDEX0_9el2Ckg2ms < 0 + 10; ++INDEX0_9el2Ckg2ms) {
					for (size_t INDEX1_9el2Ckg2ms = 0; INDEX1_9el2Ckg2ms < 0 + 200; ++INDEX1_9el2Ckg2ms) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_9el2Ckg2ms)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_9el2Ckg2ms)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(5).addWork(f_5_b51cKtCiGU);
		auto f_6_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 48; INDEX_b51cKtCiGU < 48 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_RCNb5CkNsr = 0; INDEX0_RCNb5CkNsr < 0 + 10; ++INDEX0_RCNb5CkNsr) {
					for (size_t INDEX1_RCNb5CkNsr = 0; INDEX1_RCNb5CkNsr < 0 + 200; ++INDEX1_RCNb5CkNsr) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_RCNb5CkNsr)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_RCNb5CkNsr)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(6).addWork(f_6_b51cKtCiGU);
		auto f_7_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 56; INDEX_b51cKtCiGU < 56 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_NbaPRaOCmP = 0; INDEX0_NbaPRaOCmP < 0 + 10; ++INDEX0_NbaPRaOCmP) {
					for (size_t INDEX1_NbaPRaOCmP = 0; INDEX1_NbaPRaOCmP < 0 + 200; ++INDEX1_NbaPRaOCmP) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_NbaPRaOCmP)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_NbaPRaOCmP)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(7).addWork(f_7_b51cKtCiGU);
		auto f_8_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 64; INDEX_b51cKtCiGU < 64 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_UI1YnFccdZ = 0; INDEX0_UI1YnFccdZ < 0 + 10; ++INDEX0_UI1YnFccdZ) {
					for (size_t INDEX1_UI1YnFccdZ = 0; INDEX1_UI1YnFccdZ < 0 + 200; ++INDEX1_UI1YnFccdZ) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_UI1YnFccdZ)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_UI1YnFccdZ)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(8).addWork(f_8_b51cKtCiGU);
		auto f_9_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 72; INDEX_b51cKtCiGU < 72 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_Y1eq328jy5 = 0; INDEX0_Y1eq328jy5 < 0 + 10; ++INDEX0_Y1eq328jy5) {
					for (size_t INDEX1_Y1eq328jy5 = 0; INDEX1_Y1eq328jy5 < 0 + 200; ++INDEX1_Y1eq328jy5) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_Y1eq328jy5)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_Y1eq328jy5)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(9).addWork(f_9_b51cKtCiGU);
		auto f_10_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 80; INDEX_b51cKtCiGU < 80 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_Y8aM0OY68l = 0; INDEX0_Y8aM0OY68l < 0 + 10; ++INDEX0_Y8aM0OY68l) {
					for (size_t INDEX1_Y8aM0OY68l = 0; INDEX1_Y8aM0OY68l < 0 + 200; ++INDEX1_Y8aM0OY68l) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_Y8aM0OY68l)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_Y8aM0OY68l)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(10).addWork(f_10_b51cKtCiGU);
		auto f_11_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 88; INDEX_b51cKtCiGU < 88 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_a4CcfHYSij = 0; INDEX0_a4CcfHYSij < 0 + 10; ++INDEX0_a4CcfHYSij) {
					for (size_t INDEX1_a4CcfHYSij = 0; INDEX1_a4CcfHYSij < 0 + 200; ++INDEX1_a4CcfHYSij) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_a4CcfHYSij)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_a4CcfHYSij)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(11).addWork(f_11_b51cKtCiGU);
		auto f_12_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 96; INDEX_b51cKtCiGU < 96 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_brVnQ2U6jn = 0; INDEX0_brVnQ2U6jn < 0 + 10; ++INDEX0_brVnQ2U6jn) {
					for (size_t INDEX1_brVnQ2U6jn = 0; INDEX1_brVnQ2U6jn < 0 + 200; ++INDEX1_brVnQ2U6jn) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_brVnQ2U6jn)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_brVnQ2U6jn)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(12).addWork(f_12_b51cKtCiGU);
		auto f_13_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 104; INDEX_b51cKtCiGU < 104 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_yVlGitO0UB = 0; INDEX0_yVlGitO0UB < 0 + 10; ++INDEX0_yVlGitO0UB) {
					for (size_t INDEX1_yVlGitO0UB = 0; INDEX1_yVlGitO0UB < 0 + 200; ++INDEX1_yVlGitO0UB) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_yVlGitO0UB)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_yVlGitO0UB)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(13).addWork(f_13_b51cKtCiGU);
		auto f_14_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 112; INDEX_b51cKtCiGU < 112 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_sEzJ8oH7d5 = 0; INDEX0_sEzJ8oH7d5 < 0 + 10; ++INDEX0_sEzJ8oH7d5) {
					for (size_t INDEX1_sEzJ8oH7d5 = 0; INDEX1_sEzJ8oH7d5 < 0 + 200; ++INDEX1_sEzJ8oH7d5) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_sEzJ8oH7d5)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_sEzJ8oH7d5)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(14).addWork(f_14_b51cKtCiGU);
		auto f_15_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 120; INDEX_b51cKtCiGU < 120 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_NTlctVas19 = 0; INDEX0_NTlctVas19 < 0 + 10; ++INDEX0_NTlctVas19) {
					for (size_t INDEX1_NTlctVas19 = 0; INDEX1_NTlctVas19 < 0 + 200; ++INDEX1_NTlctVas19) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_NTlctVas19)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_NTlctVas19)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(15).addWork(f_15_b51cKtCiGU);
		auto f_16_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 128; INDEX_b51cKtCiGU < 128 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_9tRzl8B0G7 = 0; INDEX0_9tRzl8B0G7 < 0 + 10; ++INDEX0_9tRzl8B0G7) {
					for (size_t INDEX1_9tRzl8B0G7 = 0; INDEX1_9tRzl8B0G7 < 0 + 200; ++INDEX1_9tRzl8B0G7) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_9tRzl8B0G7)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_9tRzl8B0G7)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(16).addWork(f_16_b51cKtCiGU);
		auto f_17_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 136; INDEX_b51cKtCiGU < 136 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_sOm2TKh7Wx = 0; INDEX0_sOm2TKh7Wx < 0 + 10; ++INDEX0_sOm2TKh7Wx) {
					for (size_t INDEX1_sOm2TKh7Wx = 0; INDEX1_sOm2TKh7Wx < 0 + 200; ++INDEX1_sOm2TKh7Wx) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_sOm2TKh7Wx)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_sOm2TKh7Wx)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(17).addWork(f_17_b51cKtCiGU);
		auto f_18_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 144; INDEX_b51cKtCiGU < 144 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_eLLzkF0qBX = 0; INDEX0_eLLzkF0qBX < 0 + 10; ++INDEX0_eLLzkF0qBX) {
					for (size_t INDEX1_eLLzkF0qBX = 0; INDEX1_eLLzkF0qBX < 0 + 200; ++INDEX1_eLLzkF0qBX) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_eLLzkF0qBX)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_eLLzkF0qBX)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(18).addWork(f_18_b51cKtCiGU);
		auto f_19_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 152; INDEX_b51cKtCiGU < 152 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_IvCsJkT581 = 0; INDEX0_IvCsJkT581 < 0 + 10; ++INDEX0_IvCsJkT581) {
					for (size_t INDEX1_IvCsJkT581 = 0; INDEX1_IvCsJkT581 < 0 + 200; ++INDEX1_IvCsJkT581) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_IvCsJkT581)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_IvCsJkT581)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(19).addWork(f_19_b51cKtCiGU);
		auto f_20_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 160; INDEX_b51cKtCiGU < 160 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_27WqoOTGU9 = 0; INDEX0_27WqoOTGU9 < 0 + 10; ++INDEX0_27WqoOTGU9) {
					for (size_t INDEX1_27WqoOTGU9 = 0; INDEX1_27WqoOTGU9 < 0 + 200; ++INDEX1_27WqoOTGU9) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_27WqoOTGU9)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_27WqoOTGU9)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(20).addWork(f_20_b51cKtCiGU);
		auto f_21_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 168; INDEX_b51cKtCiGU < 168 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_RQ4mTBrijh = 0; INDEX0_RQ4mTBrijh < 0 + 10; ++INDEX0_RQ4mTBrijh) {
					for (size_t INDEX1_RQ4mTBrijh = 0; INDEX1_RQ4mTBrijh < 0 + 200; ++INDEX1_RQ4mTBrijh) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_RQ4mTBrijh)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_RQ4mTBrijh)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(21).addWork(f_21_b51cKtCiGU);
		auto f_22_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 176; INDEX_b51cKtCiGU < 176 + 8; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_W5SiTYYQdI = 0; INDEX0_W5SiTYYQdI < 0 + 10; ++INDEX0_W5SiTYYQdI) {
					for (size_t INDEX1_W5SiTYYQdI = 0; INDEX1_W5SiTYYQdI < 0 + 200; ++INDEX1_W5SiTYYQdI) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_W5SiTYYQdI)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_W5SiTYYQdI)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(22).addWork(f_22_b51cKtCiGU);
		auto f_23_b51cKtCiGU = [&] () {
			for (size_t INDEX_b51cKtCiGU = 184; INDEX_b51cKtCiGU < 184 + 16; ++INDEX_b51cKtCiGU) {
				for (size_t INDEX0_goZVuTA7N2 = 0; INDEX0_goZVuTA7N2 < 0 + 10; ++INDEX0_goZVuTA7N2) {
					for (size_t INDEX1_goZVuTA7N2 = 0; INDEX1_goZVuTA7N2 < 0 + 200; ++INDEX1_goZVuTA7N2) {
						result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU) + (INDEX1_goZVuTA7N2)] = initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU) + (INDEX1_goZVuTA7N2)] + 1;
					}
					Set_Partial_Array( &initial_7G79DSA0Y7[200LL * (INDEX_b51cKtCiGU)], &result_EKMNHplZ1f[200LL * (INDEX_b51cKtCiGU)], 200);
				}
			}
		};
		getPool()->at(23).addWork(f_23_b51cKtCiGU);
	}
	if (rank == 0) {
		Bit_Mask * mask_ptr_NUIXXBn7dr = new Bit_Mask(48,true);
		for (size_t i_7QbZqPv84o = 0; i_7QbZqPv84o < 24; ++i_7QbZqPv84o) {
			mask_ptr_NUIXXBn7dr->setBarrier(i_7QbZqPv84o);
		}
		boost::shared_ptr<Bit_Mask>boost_mask_ptr_NUIXXBn7dr (mask_ptr_NUIXXBn7dr);
		self_barrier(boost_mask_ptr_NUIXXBn7dr);
	}
	if (rank == 0) {
		for ( int32_t i = 0; i < 200; i++ ) {
			for ( int32_t j = 0; j < 200; j++ ) {
				result_seq_tCPdEy9736[200LL * (i) + (j)] = 11;
				if (result_seq_tCPdEy9736[200LL * (i) + (j)] != result_EKMNHplZ1f[200LL * (i) + (j)]) {
					print("value at element ", i, ",", j, " is wrong!");
					MPI_Abort(MPI_COMM_WORLD, 1);
				}
			}
		}
	}
	finishExecution();
	finishGPUExecution();
	std::free(result_EKMNHplZ1f);
	std::free(result_seq_tCPdEy9736);
	std::free(initial_7G79DSA0Y7);
	MPI_Finalize();
	return 0;


}

