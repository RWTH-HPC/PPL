FlowPartialOverlap{

map increment2([Int] input): [Int] res{
    res[2 * INDEX] = input[2 * INDEX] + 1
}

map increment3([Int] input): [Int] res{
    res[3 * INDEX] = input[3 * INDEX] + 1
}

seq main() : Int {
    var [Int] initial = init_List([200],1)
    var [Int] intermediate = init_List([200],0)
    var [Int] result = init_List([200],0)
    var [Int] result_seq = init_List([200],0)
    
    /*execute the pattern on node 0 device 0 */
    intermediate = increment2<<<[0,0,0]>>>(initial)
   
    
    result = increment3<<<[0,0,0]>>>(intermediate)
    
    
    for var Int i = 0; i < 200; i++ {
        if i mod 3 == 0 {
            result_seq[i]++
			if i mod 2 == 0 {
				result_seq[i] += initial[i] + 1
			}
        }
        if result_seq[i] != result[i] {
            print("value at element " {i} " is wrong!")
            exit(1)
        }
    }
    
return 0 
}}
