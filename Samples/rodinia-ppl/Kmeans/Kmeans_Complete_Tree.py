from graphviz import Digraph


dot = Digraph(comment='Abstract Pattern Tree')

dot  #doctest: +ELLIPSIS


dot.node('IhNOlcu5toZAA4uyFuDz', 'Main')
dot.node('HVYYeQztbncj43xtTp9r', 'Expression')
dot.node('YRFtXL8YvPFLitQYnLEU', 'Call: init_List', style="filled", fillcolor="green")
dot.node('3slIZlCM2JE0qKri2tq8', 'Expression')
dot.node('sGLksIRno7oQxkWtD5ls', 'Call: init_List', style="filled", fillcolor="green")
dot.node('A9ofu712UKUiPVKXacOV', 'Expression')
dot.node('WVGbYechjn6fQvWvzGDq', 'Call: init_List', style="filled", fillcolor="green")
dot.node('nUxqkzKDRmpG1SZPoUzC', 'Expression')
dot.node('Dv5YMaa6BMeOrTFPozQM', 'Call: init_List', style="filled", fillcolor="green")
dot.node('yLGKZo9GJmIDfek8O406', 'Simple Expression')
dot.node('mGiIrfIuHkPoxMxmFV24', 'Expression')
dot.node('kMx90KO6YnLjFQvDkyD5', 'Call: k_means', style="filled", fillcolor="green")
dot.node('9BX6qXyaKiOBJGjYd3Fn', 'Expression')
dot.node('e5eExpkcsN81Nyd9O5FM', 'Call: init_List', style="filled", fillcolor="green")
dot.node('IjPxZnOR0SWTp7bkJP9i', 'Expression')
dot.node('SQTnRiP43lMG1C6D0MMB', 'Call: init_List', style="filled", fillcolor="green")
dot.node('tuzMd1l3OEOI4auDd15Z', 'Expression')
dot.node('vytfbyNh7BkoR00d0yWT', 'Call: init_List', style="filled", fillcolor="green")
dot.node('mdpLQA9ahLHr2J9zIuzQ', 'Map: copy', style="filled", fillcolor="red")
dot.node('h2BcACxBoR1qnxTQKHfm', 'Expression')
dot.node('AhaqyLbVeSjUlvl0OLfg', 'Simple Expression')
dot.node('R2Ejm5cTQHC5B5OWaTKW', 'For-Loop')
dot.node('sdNvioIf1qom48s8NCe7', 'Expression')
dot.node('eKigEhH9cQLaoivHLeYD', 'Expression')
dot.node('KeN1KXEiZJOy7yhIgvcR', 'Expression')
dot.node('7F5EcCBBR89e6t27lm4l', 'Map: determine_cemtroids', style="filled", fillcolor="red")
dot.node('TXeguqn3Sa2JLgve5oFY', 'Expression')
dot.node('roXdRiAfOyraekOSjCoG', 'Expression')
dot.node('xWcniZmGX2ar4rD5TXRj', 'Call: assign_centroid', style="filled", fillcolor="green")
dot.node('PfiarXIt6h3lUN0JUu8M', 'Simple Expression')
dot.node('qjXQtRj3bGkutySRy4Fg', 'For-Loop')
dot.node('AtpqcGpILdjXi3UPx7G0', 'Expression')
dot.node('kAqSpu16cIQmMloHiCAJ', 'Expression')
dot.node('ckuVnYIVGNbW7RkxvN3d', 'Expression')
dot.node('MuJVl2Nma5vZ8VEkMP5t', 'Simple Expression')
dot.node('pnuY2jPaC2RiXsLb7U49', 'Branch')
dot.node('vL2icEGQGJ43hbn1NybY', 'Case')
dot.node('U6k4Syx9zezvWO6f62Od', 'Expression')
dot.node('q1qktg0JnFbf5tnHQSJF', 'Simple Expression')
dot.node('0hWdjByGAPFYP0FLp72v', 'Return')
dot.node('MzFaOxtvpAWuxHxXF7j4', 'Expression')
dot.node('BjIYShCeI1HSkeG3aeUC', 'Map: update_centroids', style="filled", fillcolor="red")
dot.node('2eSR9ngTja59kudNhtKc', 'Expression')
dot.node('IS5dGUizdqycpgFINdbl', 'Expression')
dot.node('Oan5fSdJu5Abq0Wd6V7J', 'Call: assigned_sum', style="filled", fillcolor="green")
dot.node('RG9acWP7cNjneTYT6X1U', 'Simple Expression')
dot.node('eyjgsUiBkskoJqmv4A5W', 'For-Loop')
dot.node('fpk3VgZVx0DX5MHlO4nI', 'Expression')
dot.node('UFRkLjf8leA8x4eaoKVn', 'Expression')
dot.node('sF47OnYEdThqYbWC3Cxc', 'Expression')
dot.node('sge6vMMHfmSpzZes3YFs', 'Branch')
dot.node('f8hMx7XXabFCsIdDmaJl', 'Case')
dot.node('Vbh0AkFX1FiiQzA1VMKD', 'Expression')
dot.node('OKrpcgStnIH8vBGYDUoz', 'Simple Expression')
dot.node('GnicAfhBvPhjI7C2WeEg', 'Return')
dot.node('mjRERPcls7RHqSeCNpIG', 'Expression')
dot.node('6pA2IDg3EyuPTg9WcHx7', 'Expression')
dot.node('Eu67ql7yTe8ESdiaNn0L', 'Call: assigned_sum', style="filled", fillcolor="green")
dot.node('aNkIYp7Bs96OSaoumT49', 'Simple Expression')
dot.node('CEryrQr0PH9bQFyKVaiP', 'For-Loop')
dot.node('VyIYeoitDTQSY6zcSR0F', 'Expression')
dot.node('R0lRjyccfcVNtJssGrjG', 'Expression')
dot.node('LqxCz0J6iUb8d0LFqEzi', 'Expression')
dot.node('Lg3uUU5ZIbRScf8F95Ot', 'Branch')
dot.node('oKfeD19jJXFQvcSxFOtV', 'Case')
dot.node('cnzl06L7rG28t6kSO44d', 'Expression')
dot.node('RrWCOhFYuyp9uNIfJYAB', 'Simple Expression')
dot.node('zYivrjBRgTku6anngZ0r', 'Return')
dot.node('rl4bQEhBcVj9cGOgZpMX', 'Expression')
dot.node('zeZx4IGMOberWOIZKGVI', 'Expression')
dot.node('SioM4av4YjLiZfm3mOLd', 'Call: assigned_count', style="filled", fillcolor="green")
dot.node('E4rKx5Hx4KgLNcKT7mOj', 'Simple Expression')
dot.node('arBEx03HkJoXg6AmTCpT', 'For-Loop')
dot.node('CziFCcobSrDnFko2BUBG', 'Expression')
dot.node('W78fDt97DBI8U0Pm0Vqr', 'Expression')
dot.node('UcMICampQgzBx5lOsasu', 'Expression')
dot.node('kIFnu2A4ckA20b0Btimm', 'Branch')
dot.node('AsN7xQtFISGIMu3xUWBK', 'Case')
dot.node('ibRjE0zk54rvOup2jd0A', 'Expression')
dot.node('t1pEPihNcBTGNBubXmiI', 'Simple Expression')
dot.node('MyK8Fu1RHO0uzkZTjBI7', 'Return')
dot.node('pV8DFYgYTtcGKUJt9zQJ', 'Expression')
dot.node('RzO4OxS2GamsW7657Yn9', 'Branch')
dot.node('bWcV3K7n6cv20TNvOEVT', 'Case')
dot.node('nfrXOUaKSfO94NVaTVl5', 'Expression')
dot.node('XX0vJ557fnKaMD2W6VPX', 'Simple Expression')
dot.node('YQxGHIqZapNgfh0vQZ0h', 'Return')
dot.node('iDuunQrGtVyF4ajOEDZV', 'Expression')
dot.node('bZoHN3gbmv3pIoaCO3ge', 'Simple Expression')
dot.node('4ErugYRSbi2xhkzi0Mmd', 'Return')
dot.node('egcAWGTCh6Sa4dtcVWyE', 'Expression')
dot.edge('IhNOlcu5toZAA4uyFuDz', 'HVYYeQztbncj43xtTp9r')
dot.edge('IhNOlcu5toZAA4uyFuDz', '3slIZlCM2JE0qKri2tq8')
dot.edge('IhNOlcu5toZAA4uyFuDz', 'A9ofu712UKUiPVKXacOV')
dot.edge('IhNOlcu5toZAA4uyFuDz', 'nUxqkzKDRmpG1SZPoUzC')
dot.edge('IhNOlcu5toZAA4uyFuDz', 'yLGKZo9GJmIDfek8O406')
dot.edge('IhNOlcu5toZAA4uyFuDz', 'mGiIrfIuHkPoxMxmFV24')
dot.edge('IhNOlcu5toZAA4uyFuDz', 'bZoHN3gbmv3pIoaCO3ge')
dot.edge('IhNOlcu5toZAA4uyFuDz', '4ErugYRSbi2xhkzi0Mmd')
dot.edge('HVYYeQztbncj43xtTp9r', 'YRFtXL8YvPFLitQYnLEU')
dot.edge('3slIZlCM2JE0qKri2tq8', 'sGLksIRno7oQxkWtD5ls')
dot.edge('A9ofu712UKUiPVKXacOV', 'WVGbYechjn6fQvWvzGDq')
dot.edge('nUxqkzKDRmpG1SZPoUzC', 'Dv5YMaa6BMeOrTFPozQM')
dot.edge('mGiIrfIuHkPoxMxmFV24', 'kMx90KO6YnLjFQvDkyD5')
dot.edge('kMx90KO6YnLjFQvDkyD5', '9BX6qXyaKiOBJGjYd3Fn')
dot.edge('kMx90KO6YnLjFQvDkyD5', 'IjPxZnOR0SWTp7bkJP9i')
dot.edge('kMx90KO6YnLjFQvDkyD5', 'tuzMd1l3OEOI4auDd15Z')
dot.edge('kMx90KO6YnLjFQvDkyD5', 'mdpLQA9ahLHr2J9zIuzQ')
dot.edge('kMx90KO6YnLjFQvDkyD5', 'R2Ejm5cTQHC5B5OWaTKW')
dot.edge('kMx90KO6YnLjFQvDkyD5', 'YQxGHIqZapNgfh0vQZ0h')
dot.edge('9BX6qXyaKiOBJGjYd3Fn', 'e5eExpkcsN81Nyd9O5FM')
dot.edge('IjPxZnOR0SWTp7bkJP9i', 'SQTnRiP43lMG1C6D0MMB')
dot.edge('tuzMd1l3OEOI4auDd15Z', 'vytfbyNh7BkoR00d0yWT')
dot.edge('mdpLQA9ahLHr2J9zIuzQ', 'h2BcACxBoR1qnxTQKHfm')
dot.edge('mdpLQA9ahLHr2J9zIuzQ', 'AhaqyLbVeSjUlvl0OLfg')
dot.edge('R2Ejm5cTQHC5B5OWaTKW', 'sdNvioIf1qom48s8NCe7')
dot.edge('R2Ejm5cTQHC5B5OWaTKW', 'eKigEhH9cQLaoivHLeYD')
dot.edge('R2Ejm5cTQHC5B5OWaTKW', 'KeN1KXEiZJOy7yhIgvcR')
dot.edge('R2Ejm5cTQHC5B5OWaTKW', '7F5EcCBBR89e6t27lm4l')
dot.edge('R2Ejm5cTQHC5B5OWaTKW', 'BjIYShCeI1HSkeG3aeUC')
dot.edge('7F5EcCBBR89e6t27lm4l', 'TXeguqn3Sa2JLgve5oFY')
dot.edge('7F5EcCBBR89e6t27lm4l', 'roXdRiAfOyraekOSjCoG')
dot.edge('roXdRiAfOyraekOSjCoG', 'xWcniZmGX2ar4rD5TXRj')
dot.edge('xWcniZmGX2ar4rD5TXRj', 'PfiarXIt6h3lUN0JUu8M')
dot.edge('xWcniZmGX2ar4rD5TXRj', 'qjXQtRj3bGkutySRy4Fg')
dot.edge('xWcniZmGX2ar4rD5TXRj', '0hWdjByGAPFYP0FLp72v')
dot.edge('qjXQtRj3bGkutySRy4Fg', 'AtpqcGpILdjXi3UPx7G0')
dot.edge('qjXQtRj3bGkutySRy4Fg', 'kAqSpu16cIQmMloHiCAJ')
dot.edge('qjXQtRj3bGkutySRy4Fg', 'ckuVnYIVGNbW7RkxvN3d')
dot.edge('qjXQtRj3bGkutySRy4Fg', 'MuJVl2Nma5vZ8VEkMP5t')
dot.edge('qjXQtRj3bGkutySRy4Fg', 'pnuY2jPaC2RiXsLb7U49')
dot.edge('pnuY2jPaC2RiXsLb7U49', 'vL2icEGQGJ43hbn1NybY')
dot.edge('vL2icEGQGJ43hbn1NybY', 'U6k4Syx9zezvWO6f62Od')
dot.edge('vL2icEGQGJ43hbn1NybY', 'q1qktg0JnFbf5tnHQSJF')
dot.edge('0hWdjByGAPFYP0FLp72v', 'MzFaOxtvpAWuxHxXF7j4')
dot.edge('BjIYShCeI1HSkeG3aeUC', '2eSR9ngTja59kudNhtKc')
dot.edge('BjIYShCeI1HSkeG3aeUC', 'IS5dGUizdqycpgFINdbl')
dot.edge('BjIYShCeI1HSkeG3aeUC', '6pA2IDg3EyuPTg9WcHx7')
dot.edge('BjIYShCeI1HSkeG3aeUC', 'zeZx4IGMOberWOIZKGVI')
dot.edge('BjIYShCeI1HSkeG3aeUC', 'RzO4OxS2GamsW7657Yn9')
dot.edge('IS5dGUizdqycpgFINdbl', 'Oan5fSdJu5Abq0Wd6V7J')
dot.edge('Oan5fSdJu5Abq0Wd6V7J', 'RG9acWP7cNjneTYT6X1U')
dot.edge('Oan5fSdJu5Abq0Wd6V7J', 'eyjgsUiBkskoJqmv4A5W')
dot.edge('Oan5fSdJu5Abq0Wd6V7J', 'GnicAfhBvPhjI7C2WeEg')
dot.edge('eyjgsUiBkskoJqmv4A5W', 'fpk3VgZVx0DX5MHlO4nI')
dot.edge('eyjgsUiBkskoJqmv4A5W', 'UFRkLjf8leA8x4eaoKVn')
dot.edge('eyjgsUiBkskoJqmv4A5W', 'sF47OnYEdThqYbWC3Cxc')
dot.edge('eyjgsUiBkskoJqmv4A5W', 'sge6vMMHfmSpzZes3YFs')
dot.edge('sge6vMMHfmSpzZes3YFs', 'f8hMx7XXabFCsIdDmaJl')
dot.edge('f8hMx7XXabFCsIdDmaJl', 'Vbh0AkFX1FiiQzA1VMKD')
dot.edge('f8hMx7XXabFCsIdDmaJl', 'OKrpcgStnIH8vBGYDUoz')
dot.edge('GnicAfhBvPhjI7C2WeEg', 'mjRERPcls7RHqSeCNpIG')
dot.edge('6pA2IDg3EyuPTg9WcHx7', 'Eu67ql7yTe8ESdiaNn0L')
dot.edge('Eu67ql7yTe8ESdiaNn0L', 'aNkIYp7Bs96OSaoumT49')
dot.edge('Eu67ql7yTe8ESdiaNn0L', 'CEryrQr0PH9bQFyKVaiP')
dot.edge('Eu67ql7yTe8ESdiaNn0L', 'zYivrjBRgTku6anngZ0r')
dot.edge('CEryrQr0PH9bQFyKVaiP', 'VyIYeoitDTQSY6zcSR0F')
dot.edge('CEryrQr0PH9bQFyKVaiP', 'R0lRjyccfcVNtJssGrjG')
dot.edge('CEryrQr0PH9bQFyKVaiP', 'LqxCz0J6iUb8d0LFqEzi')
dot.edge('CEryrQr0PH9bQFyKVaiP', 'Lg3uUU5ZIbRScf8F95Ot')
dot.edge('Lg3uUU5ZIbRScf8F95Ot', 'oKfeD19jJXFQvcSxFOtV')
dot.edge('oKfeD19jJXFQvcSxFOtV', 'cnzl06L7rG28t6kSO44d')
dot.edge('oKfeD19jJXFQvcSxFOtV', 'RrWCOhFYuyp9uNIfJYAB')
dot.edge('zYivrjBRgTku6anngZ0r', 'rl4bQEhBcVj9cGOgZpMX')
dot.edge('zeZx4IGMOberWOIZKGVI', 'SioM4av4YjLiZfm3mOLd')
dot.edge('SioM4av4YjLiZfm3mOLd', 'E4rKx5Hx4KgLNcKT7mOj')
dot.edge('SioM4av4YjLiZfm3mOLd', 'arBEx03HkJoXg6AmTCpT')
dot.edge('SioM4av4YjLiZfm3mOLd', 'MyK8Fu1RHO0uzkZTjBI7')
dot.edge('arBEx03HkJoXg6AmTCpT', 'CziFCcobSrDnFko2BUBG')
dot.edge('arBEx03HkJoXg6AmTCpT', 'W78fDt97DBI8U0Pm0Vqr')
dot.edge('arBEx03HkJoXg6AmTCpT', 'UcMICampQgzBx5lOsasu')
dot.edge('arBEx03HkJoXg6AmTCpT', 'kIFnu2A4ckA20b0Btimm')
dot.edge('kIFnu2A4ckA20b0Btimm', 'AsN7xQtFISGIMu3xUWBK')
dot.edge('AsN7xQtFISGIMu3xUWBK', 'ibRjE0zk54rvOup2jd0A')
dot.edge('AsN7xQtFISGIMu3xUWBK', 't1pEPihNcBTGNBubXmiI')
dot.edge('MyK8Fu1RHO0uzkZTjBI7', 'pV8DFYgYTtcGKUJt9zQJ')
dot.edge('RzO4OxS2GamsW7657Yn9', 'bWcV3K7n6cv20TNvOEVT')
dot.edge('bWcV3K7n6cv20TNvOEVT', 'nfrXOUaKSfO94NVaTVl5')
dot.edge('bWcV3K7n6cv20TNvOEVT', 'XX0vJ557fnKaMD2W6VPX')
dot.edge('YQxGHIqZapNgfh0vQZ0h', 'iDuunQrGtVyF4ajOEDZV')
dot.edge('4ErugYRSbi2xhkzi0Mmd', 'egcAWGTCh6Sa4dtcVWyE')



print(dot.source)
dot.render('Kmeans_Complete_Tree.gv', view=True)