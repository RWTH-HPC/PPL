from graphviz import Digraph


dot = Digraph(comment='Abstract Pattern Tree')

dot  #doctest: +ELLIPSIS


dot.node('AEH3bpjHK8YeJHclolBC', 'Main')
dot.node('ilcvD4OjPd5ZjW4L3M13', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('kHdqfQBH4WC9bzTRq2Od', 'For Loop', style="filled", fillcolor="cyan")
dot.node('I4JrRzLTMUYxOaRofrn5', 'Map: cell_tracking', style="filled", fillcolor="orangered")
dot.node('JWd8SmqdPxR9qLgJGFXA', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('ZjpcJO9RxT9uh6DdodBP', 'While Loop', style="filled", fillcolor="cyan")
dot.node('rOo9GHQW7X4a5nPpRT6f', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('7LzBCJ9tuIhRip2Qh77r', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('JiCc5EORyNx39Mmq4qkq', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('veFTcrP1hguLPvtuKsq1', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('irhy6YGp62ffGAxez5zp', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('6BstfujqQQEMH0NG3ayu', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('gS2dv2UPnptJboiLuBgG', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('QEZlrKLgszIEiaOzzDSb', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('up5ZIC0PX9RYEUCnQ9hn', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('YPIyEQEkoyHI0fh2CPqN', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('vmheJstnirY6E63y3qUF', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('J0996OPlSIHNkqNYsSQk', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('f8BkgEUQCjUj09aq2tT6', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('2qReUOoQJtZAj1J35jJY', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('PdBkYnECkdYp1BSrnQOz', 'Stencil: heaviside', style="filled", fillcolor="orangered")
dot.node('JQe0AgPJFGrx6RK6NOze', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('jL2Z4eIu5GGY2h3mgOqW', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('15H3p0dx61kLQcUP5aKd', 'While Loop', style="filled", fillcolor="cyan")
dot.node('neXp2UI1B7Nm4bhgeCyy', 'Branch', style="filled", fillcolor="cyan")
dot.node('B4rkgOQh8vtBGFHkozRJ', 'Reduction: sum', style="filled", fillcolor="orangered")
dot.node('UYsUez7ALnJRGKeRKYup', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('dxqkJPUbYkzP1Iq8lF9G', 'Reduction: sum', style="filled", fillcolor="orangered")
dot.node('dmlTq43gFx0tjIkGfhOs', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('U6yFRAkYP4GBI5T5Q1BX', 'Reduction: sum', style="filled", fillcolor="orangered")
dot.node('rjnNE3tsFfgaTsDbirYA', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('4QWS1BgkfAxCsXaG8Cqv', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('91sgPQuPjE4z3gQYQ3FK', 'Serial', style="filled", fillcolor="lawngreen")
dot.edge('AEH3bpjHK8YeJHclolBC', 'ilcvD4OjPd5ZjW4L3M13')
dot.edge('AEH3bpjHK8YeJHclolBC', 'kHdqfQBH4WC9bzTRq2Od')
dot.edge('kHdqfQBH4WC9bzTRq2Od', 'I4JrRzLTMUYxOaRofrn5')
dot.edge('I4JrRzLTMUYxOaRofrn5', 'JWd8SmqdPxR9qLgJGFXA')
dot.edge('I4JrRzLTMUYxOaRofrn5', 'ZjpcJO9RxT9uh6DdodBP')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'rOo9GHQW7X4a5nPpRT6f')
dot.edge('rOo9GHQW7X4a5nPpRT6f', '7LzBCJ9tuIhRip2Qh77r')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'JiCc5EORyNx39Mmq4qkq')
dot.edge('JiCc5EORyNx39Mmq4qkq', 'veFTcrP1hguLPvtuKsq1')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'irhy6YGp62ffGAxez5zp')
dot.edge('irhy6YGp62ffGAxez5zp', '6BstfujqQQEMH0NG3ayu')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'gS2dv2UPnptJboiLuBgG')
dot.edge('gS2dv2UPnptJboiLuBgG', 'QEZlrKLgszIEiaOzzDSb')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'up5ZIC0PX9RYEUCnQ9hn')
dot.edge('up5ZIC0PX9RYEUCnQ9hn', 'YPIyEQEkoyHI0fh2CPqN')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'vmheJstnirY6E63y3qUF')
dot.edge('vmheJstnirY6E63y3qUF', 'J0996OPlSIHNkqNYsSQk')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'f8BkgEUQCjUj09aq2tT6')
dot.edge('f8BkgEUQCjUj09aq2tT6', '2qReUOoQJtZAj1J35jJY')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'PdBkYnECkdYp1BSrnQOz')
dot.edge('PdBkYnECkdYp1BSrnQOz', 'JQe0AgPJFGrx6RK6NOze')
dot.edge('ZjpcJO9RxT9uh6DdodBP', 'jL2Z4eIu5GGY2h3mgOqW')
dot.edge('I4JrRzLTMUYxOaRofrn5', '15H3p0dx61kLQcUP5aKd')
dot.edge('15H3p0dx61kLQcUP5aKd', 'neXp2UI1B7Nm4bhgeCyy')
dot.edge('neXp2UI1B7Nm4bhgeCyy', 'B4rkgOQh8vtBGFHkozRJ')
dot.edge('B4rkgOQh8vtBGFHkozRJ', 'UYsUez7ALnJRGKeRKYup')
dot.edge('neXp2UI1B7Nm4bhgeCyy', 'dxqkJPUbYkzP1Iq8lF9G')
dot.edge('dxqkJPUbYkzP1Iq8lF9G', 'dmlTq43gFx0tjIkGfhOs')
dot.edge('neXp2UI1B7Nm4bhgeCyy', 'U6yFRAkYP4GBI5T5Q1BX')
dot.edge('U6yFRAkYP4GBI5T5Q1BX', 'rjnNE3tsFfgaTsDbirYA')
dot.edge('neXp2UI1B7Nm4bhgeCyy', '4QWS1BgkfAxCsXaG8Cqv')
dot.edge('kHdqfQBH4WC9bzTRq2Od', '91sgPQuPjE4z3gQYQ3FK')



print(dot.source)
dot.render('leukocyte_Pattern_Nesting_Tree.gv', view=True)