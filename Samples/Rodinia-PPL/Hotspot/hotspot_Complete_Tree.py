from graphviz import Digraph


dot = Digraph(comment='Abstract Pattern Tree')

dot  #doctest: +ELLIPSIS


dot.node('2OSbxHRUTKus7Dn63PBv', 'Main')
dot.node('pzQ2kxKQCBcfL6f9b7jM', 'Expression')
dot.node('WsIa5VSSgmhcQ6CRDDYT', 'Call: init_List', style="filled", fillcolor="green")
dot.node('umV68gkKk2v2YOKJ0NSN', 'Expression')
dot.node('Kbcyo1gmFla02EUkJLAF', 'Call: init_List', style="filled", fillcolor="green")
dot.node('P29j3dSJCB0g7eCRPdR2', 'Expression')
dot.node('fYzUnpqu4CSGdf8ctSS7', 'Call: init_List', style="filled", fillcolor="green")
dot.node('vEvpz2ZfMV7zdMm0soYQ', 'Simple Expression')
dot.node('cV9FltQF9ZtrMnRSu18h', 'Expression')
dot.node('RzI5OjZNIaiF3MRxxVo3', 'Call: compute_tran_temp', style="filled", fillcolor="green")
dot.node('2KR16ryOQN58ieBy9TZ1', 'Expression')
dot.node('1vT9u0d6XheA9l12rCBI', 'Call: init_List', style="filled", fillcolor="green")
dot.node('yySG7l2WouBbhPe7zGz1', 'Expression')
dot.node('7BldI3oksz8GvO5IKLaj', 'Call: init_List', style="filled", fillcolor="green")
dot.node('mTciNRYHXS2ICEI8N2px', 'Stencil: copy', style="filled", fillcolor="red")
dot.node('4C1CihWrlmKZ3ekAZ6o8', 'Expression')
dot.node('tYnA4a2tGFv8paoiYpbf', 'Simple Expression')
dot.node('ksGVF8CdbKWgmddgxBBH', 'Simple Expression')
dot.node('g8S3geV4rQk98H4ggLu5', 'For-Loop')
dot.node('dYYPhyZe6tvD40ii2sCo', 'Expression')
dot.node('TZiPtjLmH7PN1xSXoSn6', 'Expression')
dot.node('3Axrp7qFn8cMaPArVThM', 'Expression')
dot.node('Hrf2GBDn0ujfPY2EJgnL', 'Simple Expression')
dot.node('psMG7MM8gc0GEiJpRC5Q', 'Stencil: edge1', style="filled", fillcolor="red")
dot.node('B53sCPFKJ9xsFf5gJFCW', 'Expression')
dot.node('MV6m3YGE1PsTWTxVZdVH', 'Simple Expression')
dot.node('vhV9fsGLaazKHbatfLHk', 'Stencil: edge2', style="filled", fillcolor="red")
dot.node('Jda0QrsRu1TtWE0Wmeaa', 'Expression')
dot.node('hyFOe9NySJIhyUmzBX4A', 'Simple Expression')
dot.node('X6eyJTlAZBezgJFb8jy2', 'Stencil: edge3', style="filled", fillcolor="red")
dot.node('qlng2uJUpqPKNypjkjJl', 'Expression')
dot.node('G3IbfRJXdOaZHUC1ke8B', 'Simple Expression')
dot.node('ZUhV5lGJ38yxuraCQkaL', 'Stencil: edge4', style="filled", fillcolor="red")
dot.node('9RvxIGmJTc30RNTLC9Sv', 'Expression')
dot.node('tlcI9vYWzOcayiaaEhfN', 'Simple Expression')
dot.node('B5RdNbxmBQ74RFX0mjRf', 'Stencil: single_iteration', style="filled", fillcolor="red")
dot.node('fWqXYEd0U0JDxaDImJ2K', 'Expression')
dot.node('2TVHKPnvCdL6ujZCG4Ky', 'Simple Expression')
dot.node('s6g3XFIq8FC6Mnv6oizp', 'Stencil: copy', style="filled", fillcolor="red")
dot.node('7u7D8d0YPabaSps9dBVD', 'Expression')
dot.node('r4S0Rd4Xa3QUnKAS44im', 'Simple Expression')
dot.node('e1bYWMskiE4nEpyfhNzq', 'Return')
dot.node('pbtDvDx4ocP1kCgpirfg', 'Expression')
dot.node('PPMk4pfENoaYingbFFgx', 'Simple Expression')
dot.node('9JFqYgPnTPj67mdU7Svr', 'Return')
dot.node('O8IcD8n4SFzL6NO3tb24', 'Expression')
dot.edge('2OSbxHRUTKus7Dn63PBv', 'pzQ2kxKQCBcfL6f9b7jM')
dot.edge('2OSbxHRUTKus7Dn63PBv', 'umV68gkKk2v2YOKJ0NSN')
dot.edge('2OSbxHRUTKus7Dn63PBv', 'P29j3dSJCB0g7eCRPdR2')
dot.edge('2OSbxHRUTKus7Dn63PBv', 'vEvpz2ZfMV7zdMm0soYQ')
dot.edge('2OSbxHRUTKus7Dn63PBv', 'cV9FltQF9ZtrMnRSu18h')
dot.edge('2OSbxHRUTKus7Dn63PBv', 'PPMk4pfENoaYingbFFgx')
dot.edge('2OSbxHRUTKus7Dn63PBv', '9JFqYgPnTPj67mdU7Svr')
dot.edge('pzQ2kxKQCBcfL6f9b7jM', 'WsIa5VSSgmhcQ6CRDDYT')
dot.edge('umV68gkKk2v2YOKJ0NSN', 'Kbcyo1gmFla02EUkJLAF')
dot.edge('P29j3dSJCB0g7eCRPdR2', 'fYzUnpqu4CSGdf8ctSS7')
dot.edge('cV9FltQF9ZtrMnRSu18h', 'RzI5OjZNIaiF3MRxxVo3')
dot.edge('RzI5OjZNIaiF3MRxxVo3', '2KR16ryOQN58ieBy9TZ1')
dot.edge('RzI5OjZNIaiF3MRxxVo3', 'yySG7l2WouBbhPe7zGz1')
dot.edge('RzI5OjZNIaiF3MRxxVo3', 'mTciNRYHXS2ICEI8N2px')
dot.edge('RzI5OjZNIaiF3MRxxVo3', 'ksGVF8CdbKWgmddgxBBH')
dot.edge('RzI5OjZNIaiF3MRxxVo3', 'g8S3geV4rQk98H4ggLu5')
dot.edge('RzI5OjZNIaiF3MRxxVo3', 'e1bYWMskiE4nEpyfhNzq')
dot.edge('2KR16ryOQN58ieBy9TZ1', '1vT9u0d6XheA9l12rCBI')
dot.edge('yySG7l2WouBbhPe7zGz1', '7BldI3oksz8GvO5IKLaj')
dot.edge('mTciNRYHXS2ICEI8N2px', '4C1CihWrlmKZ3ekAZ6o8')
dot.edge('mTciNRYHXS2ICEI8N2px', 'tYnA4a2tGFv8paoiYpbf')
dot.edge('g8S3geV4rQk98H4ggLu5', 'dYYPhyZe6tvD40ii2sCo')
dot.edge('g8S3geV4rQk98H4ggLu5', 'TZiPtjLmH7PN1xSXoSn6')
dot.edge('g8S3geV4rQk98H4ggLu5', '3Axrp7qFn8cMaPArVThM')
dot.edge('g8S3geV4rQk98H4ggLu5', 'Hrf2GBDn0ujfPY2EJgnL')
dot.edge('g8S3geV4rQk98H4ggLu5', 'psMG7MM8gc0GEiJpRC5Q')
dot.edge('g8S3geV4rQk98H4ggLu5', 'vhV9fsGLaazKHbatfLHk')
dot.edge('g8S3geV4rQk98H4ggLu5', 'X6eyJTlAZBezgJFb8jy2')
dot.edge('g8S3geV4rQk98H4ggLu5', 'ZUhV5lGJ38yxuraCQkaL')
dot.edge('g8S3geV4rQk98H4ggLu5', 'B5RdNbxmBQ74RFX0mjRf')
dot.edge('g8S3geV4rQk98H4ggLu5', 's6g3XFIq8FC6Mnv6oizp')
dot.edge('psMG7MM8gc0GEiJpRC5Q', 'B53sCPFKJ9xsFf5gJFCW')
dot.edge('psMG7MM8gc0GEiJpRC5Q', 'MV6m3YGE1PsTWTxVZdVH')
dot.edge('vhV9fsGLaazKHbatfLHk', 'Jda0QrsRu1TtWE0Wmeaa')
dot.edge('vhV9fsGLaazKHbatfLHk', 'hyFOe9NySJIhyUmzBX4A')
dot.edge('X6eyJTlAZBezgJFb8jy2', 'qlng2uJUpqPKNypjkjJl')
dot.edge('X6eyJTlAZBezgJFb8jy2', 'G3IbfRJXdOaZHUC1ke8B')
dot.edge('ZUhV5lGJ38yxuraCQkaL', '9RvxIGmJTc30RNTLC9Sv')
dot.edge('ZUhV5lGJ38yxuraCQkaL', 'tlcI9vYWzOcayiaaEhfN')
dot.edge('B5RdNbxmBQ74RFX0mjRf', 'fWqXYEd0U0JDxaDImJ2K')
dot.edge('B5RdNbxmBQ74RFX0mjRf', '2TVHKPnvCdL6ujZCG4Ky')
dot.edge('s6g3XFIq8FC6Mnv6oizp', '7u7D8d0YPabaSps9dBVD')
dot.edge('s6g3XFIq8FC6Mnv6oizp', 'r4S0Rd4Xa3QUnKAS44im')
dot.edge('e1bYWMskiE4nEpyfhNzq', 'pbtDvDx4ocP1kCgpirfg')
dot.edge('9JFqYgPnTPj67mdU7Svr', 'O8IcD8n4SFzL6NO3tb24')



print(dot.source)
dot.render('hotspot_Complete_Tree.gv', view=True)