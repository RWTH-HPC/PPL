from graphviz import Digraph


dot = Digraph(comment='Abstract Pattern Tree')

dot  #doctest: +ELLIPSIS


dot.node('Q0O341V3dfh01RFK56Ab', 'Main')
dot.node('2Hbb4Ek4hGME1ZfBmW2T', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('MGiuhtDK4vxkX5C6XDzh', 'Stencil: add_padding_1', style="filled", fillcolor="orangered")
dot.node('NhSr4OtEyt92JzUHPPNE', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('mz7zJFcaefJVDqvOWWbW', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('3n3zvohA0qET24dlAcHo', 'For Loop', style="filled", fillcolor="cyan")
dot.node('VkU7iZLqAePlE0XYLVj7', 'Stencil: side_north', style="filled", fillcolor="orangered")
dot.node('Tolx8riJ1WjEFVLCnYx7', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('RTo8jrNs8Cq987dTJGqE', 'Stencil: side_south', style="filled", fillcolor="orangered")
dot.node('RJoMMRyTIlcGRtAEz2Th', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('InNAocqxcutNBF0hHyqp', 'Stencil: side_east', style="filled", fillcolor="orangered")
dot.node('Rap2eh2cPOQmrnHQNHQx', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('VVzD3OY4A1YfIS7uW027', 'Stencil: side_west', style="filled", fillcolor="orangered")
dot.node('czzhTlbzJxiSX1Nu9bbq', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('aeXPqQTrbygfuSKnhR1v', 'Stencil: side_top', style="filled", fillcolor="orangered")
dot.node('Vg0ebPcj541lYCm2Fer4', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('D8UroCncL7IOJYaVDBYa', 'Stencil: side_bottom', style="filled", fillcolor="orangered")
dot.node('Eu62DREzP6vAOI0xVrK5', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('RQ2jDt060lSoP3iLxXhp', 'Stencil: single_iteration', style="filled", fillcolor="orangered")
dot.node('UHPtPv0qeQnahnEl3RSf', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('Au2ODQ0LJzyHi2uakUGt', 'Stencil: copy', style="filled", fillcolor="orangered")
dot.node('v8BrYhWEp2KUbWRbhOyH', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('1qxN0LtOIC65jYYgdMdv', 'Serial', style="filled", fillcolor="lawngreen")
dot.edge('Q0O341V3dfh01RFK56Ab', '2Hbb4Ek4hGME1ZfBmW2T')
dot.edge('Q0O341V3dfh01RFK56Ab', 'MGiuhtDK4vxkX5C6XDzh')
dot.edge('MGiuhtDK4vxkX5C6XDzh', 'NhSr4OtEyt92JzUHPPNE')
dot.edge('Q0O341V3dfh01RFK56Ab', 'mz7zJFcaefJVDqvOWWbW')
dot.edge('Q0O341V3dfh01RFK56Ab', '3n3zvohA0qET24dlAcHo')
dot.edge('3n3zvohA0qET24dlAcHo', 'VkU7iZLqAePlE0XYLVj7')
dot.edge('VkU7iZLqAePlE0XYLVj7', 'Tolx8riJ1WjEFVLCnYx7')
dot.edge('3n3zvohA0qET24dlAcHo', 'RTo8jrNs8Cq987dTJGqE')
dot.edge('RTo8jrNs8Cq987dTJGqE', 'RJoMMRyTIlcGRtAEz2Th')
dot.edge('3n3zvohA0qET24dlAcHo', 'InNAocqxcutNBF0hHyqp')
dot.edge('InNAocqxcutNBF0hHyqp', 'Rap2eh2cPOQmrnHQNHQx')
dot.edge('3n3zvohA0qET24dlAcHo', 'VVzD3OY4A1YfIS7uW027')
dot.edge('VVzD3OY4A1YfIS7uW027', 'czzhTlbzJxiSX1Nu9bbq')
dot.edge('3n3zvohA0qET24dlAcHo', 'aeXPqQTrbygfuSKnhR1v')
dot.edge('aeXPqQTrbygfuSKnhR1v', 'Vg0ebPcj541lYCm2Fer4')
dot.edge('3n3zvohA0qET24dlAcHo', 'D8UroCncL7IOJYaVDBYa')
dot.edge('D8UroCncL7IOJYaVDBYa', 'Eu62DREzP6vAOI0xVrK5')
dot.edge('3n3zvohA0qET24dlAcHo', 'RQ2jDt060lSoP3iLxXhp')
dot.edge('RQ2jDt060lSoP3iLxXhp', 'UHPtPv0qeQnahnEl3RSf')
dot.edge('3n3zvohA0qET24dlAcHo', 'Au2ODQ0LJzyHi2uakUGt')
dot.edge('Au2ODQ0LJzyHi2uakUGt', 'v8BrYhWEp2KUbWRbhOyH')
dot.edge('Q0O341V3dfh01RFK56Ab', '1qxN0LtOIC65jYYgdMdv')



print(dot.source)
dot.render('hotspot3D_Pattern_Nesting_Tree.gv', view=True)