from graphviz import Digraph


dot = Digraph(comment='Abstract Pattern Tree')

dot  #doctest: +ELLIPSIS


dot.node('4QSDuWPkcqtLFI20yuWt', 'Main')
dot.node('pFqHn5rifjc5nrGvvrjg', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('ESAqPrVGzi6gacU6UEl3', 'Stencil: gicov_computation', style="filled", fillcolor="orangered")
dot.node('YAEZPlNO21lEGtyDgZuY', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('Qt4xB9oMRltmDtLWIMtV', 'For Loop', style="filled", fillcolor="cyan")
dot.node('GNHZWGKXleUBY1VaUXEo', 'Reduction: sum', style="filled", fillcolor="orangered")
dot.node('00TX0RH0QOWEq3NVcCzA', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('4AQ5VEL6gz233jrqcEM1', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('bGvWYsWa55QpoITeBk53', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('6I9btY6DUIYdHyhOUsTJ', 'Stencil: sqr_elements', style="filled", fillcolor="orangered")
dot.node('XMpBIx5VZ5uAGtmWB1Je', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('46D5pjMrx1zm6JThrtP5', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('l2roM9JOOrYAEhrCTQYI', 'Stencil: dilate12', style="filled", fillcolor="orangered")
dot.node('Gudeb5NB81W1GBuTPfbq', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('c1ySKSIxOjAJTSCWWZOQ', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('zl0Tu8DW5QZEklyqYqL6', 'Stencil: mtrm_mlt', style="filled", fillcolor="orangered")
dot.node('MVxUObBE3Uq2fs4tQGV0', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('c5jPligmYEJTvML3OdWB', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('lZICbkkdrWpk17etay4r', 'Map: mmtr_mlt', style="filled", fillcolor="orangered")
dot.node('iIt0d2aLUpjNiRopLtqr', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('jEdAz2R68pEauTWo6lWa', 'Map: MxV', style="filled", fillcolor="orangered")
dot.node('W8BWCAcXZGDUqZWzhfIa', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('QZo8orqBos2QU0qEbQpQ', 'Reduction: dot', style="filled", fillcolor="orangered")
dot.node('ZYxBKyilG2uz4qaGMNvv', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('ldVUIDYWjsFACVTGp91y', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('YnS4dEbIaMUDFAAxWC1S', 'For Loop', style="filled", fillcolor="cyan")
dot.node('763vz7IOjjXNcYMgM2fP', 'Branch', style="filled", fillcolor="cyan")
dot.node('UoKo4aOB6Cbzbct5qVCD', 'Branch', style="filled", fillcolor="cyan")
dot.node('NEsEqBICbEcEvC1SeQIy', 'Map: MxV', style="filled", fillcolor="orangered")
dot.node('0Tvjxe8hisoxAI3zlEqH', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('QtBvfxmzRCqHnXfbOaoq', 'Reduction: dot', style="filled", fillcolor="orangered")
dot.node('lSZJb2hdZXVRraEe1KXE', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('2PbtPtVAEbU9TQprdoQ4', 'Map: MxV', style="filled", fillcolor="orangered")
dot.node('MSy5zIqgkVOhSzxhTyxf', 'Serial', style="filled", fillcolor="lawngreen")
dot.node('rGNBzjhsfk07NynZmDl4', 'Reduction: dot', style="filled", fillcolor="orangered")
dot.node('MOdkohQhz0aueomTMxhU', 'Serial', style="filled", fillcolor="lawngreen")
dot.edge('4QSDuWPkcqtLFI20yuWt', 'pFqHn5rifjc5nrGvvrjg')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'ESAqPrVGzi6gacU6UEl3')
dot.edge('ESAqPrVGzi6gacU6UEl3', 'YAEZPlNO21lEGtyDgZuY')
dot.edge('ESAqPrVGzi6gacU6UEl3', 'Qt4xB9oMRltmDtLWIMtV')
dot.edge('Qt4xB9oMRltmDtLWIMtV', 'GNHZWGKXleUBY1VaUXEo')
dot.edge('GNHZWGKXleUBY1VaUXEo', '00TX0RH0QOWEq3NVcCzA')
dot.edge('Qt4xB9oMRltmDtLWIMtV', '4AQ5VEL6gz233jrqcEM1')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'bGvWYsWa55QpoITeBk53')
dot.edge('4QSDuWPkcqtLFI20yuWt', '6I9btY6DUIYdHyhOUsTJ')
dot.edge('6I9btY6DUIYdHyhOUsTJ', 'XMpBIx5VZ5uAGtmWB1Je')
dot.edge('4QSDuWPkcqtLFI20yuWt', '46D5pjMrx1zm6JThrtP5')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'l2roM9JOOrYAEhrCTQYI')
dot.edge('l2roM9JOOrYAEhrCTQYI', 'Gudeb5NB81W1GBuTPfbq')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'c1ySKSIxOjAJTSCWWZOQ')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'zl0Tu8DW5QZEklyqYqL6')
dot.edge('zl0Tu8DW5QZEklyqYqL6', 'MVxUObBE3Uq2fs4tQGV0')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'c5jPligmYEJTvML3OdWB')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'lZICbkkdrWpk17etay4r')
dot.edge('lZICbkkdrWpk17etay4r', 'iIt0d2aLUpjNiRopLtqr')
dot.edge('lZICbkkdrWpk17etay4r', 'jEdAz2R68pEauTWo6lWa')
dot.edge('jEdAz2R68pEauTWo6lWa', 'W8BWCAcXZGDUqZWzhfIa')
dot.edge('jEdAz2R68pEauTWo6lWa', 'QZo8orqBos2QU0qEbQpQ')
dot.edge('QZo8orqBos2QU0qEbQpQ', 'ZYxBKyilG2uz4qaGMNvv')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'ldVUIDYWjsFACVTGp91y')
dot.edge('4QSDuWPkcqtLFI20yuWt', 'YnS4dEbIaMUDFAAxWC1S')
dot.edge('YnS4dEbIaMUDFAAxWC1S', '763vz7IOjjXNcYMgM2fP')
dot.edge('763vz7IOjjXNcYMgM2fP', 'UoKo4aOB6Cbzbct5qVCD')
dot.edge('UoKo4aOB6Cbzbct5qVCD', 'NEsEqBICbEcEvC1SeQIy')
dot.edge('NEsEqBICbEcEvC1SeQIy', '0Tvjxe8hisoxAI3zlEqH')
dot.edge('NEsEqBICbEcEvC1SeQIy', 'QtBvfxmzRCqHnXfbOaoq')
dot.edge('QtBvfxmzRCqHnXfbOaoq', 'lSZJb2hdZXVRraEe1KXE')
dot.edge('UoKo4aOB6Cbzbct5qVCD', '2PbtPtVAEbU9TQprdoQ4')
dot.edge('2PbtPtVAEbU9TQprdoQ4', 'MSy5zIqgkVOhSzxhTyxf')
dot.edge('2PbtPtVAEbU9TQprdoQ4', 'rGNBzjhsfk07NynZmDl4')
dot.edge('rGNBzjhsfk07NynZmDl4', 'MOdkohQhz0aueomTMxhU')



print(dot.source)
dot.render('leukocyte_preprocessing_Pattern_Nesting_Tree.gv', view=True)